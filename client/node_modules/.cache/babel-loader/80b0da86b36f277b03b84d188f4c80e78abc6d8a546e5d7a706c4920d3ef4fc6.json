{"ast":null,"code":"'use client';\n\nimport { useIsomorphicLayoutEffect, Globals } from '@react-spring/web';\nconst handleMediaChange = e => {\n  Globals.assign({\n    // Modification such the react-spring implementation such that this hook can remove animation but never activate animation.\n    skipAnimation: e.matches || undefined\n  });\n};\n\n/**\n * Returns `boolean` or `null`, used to automatically\n * set skipAnimations to the value of the user's\n * `prefers-reduced-motion` query.\n *\n * The return value, post-effect, is the value of their preferred setting\n */\nexport const useReducedMotion = () => {\n  // Taken from: https://github.com/pmndrs/react-spring/blob/fd65b605b85c3a24143c4ce9dd322fdfca9c66be/packages/shared/src/hooks/useReducedMotion.ts\n\n  useIsomorphicLayoutEffect(() => {\n    // Skip animation test/jsdom\n    const shouldSkipAnimation = !window?.matchMedia;\n    if (shouldSkipAnimation) {\n      handleMediaChange({\n        matches: true\n      });\n      return undefined;\n    }\n    const mql = window.matchMedia('(prefers-reduced-motion)');\n    handleMediaChange(mql);\n\n    // MatchMedia is not fully supported in all environments, so we need to check if it exists before calling addEventListener\n    mql.addEventListener?.('change', handleMediaChange);\n    return () => {\n      mql.removeEventListener?.('change', handleMediaChange);\n    };\n  }, []);\n};","map":{"version":3,"names":["useIsomorphicLayoutEffect","Globals","handleMediaChange","e","assign","skipAnimation","matches","undefined","useReducedMotion","shouldSkipAnimation","window","matchMedia","mql","addEventListener","removeEventListener"],"sources":["/Volumes/Tarun Goyal/Tarun/Upgrad/client/node_modules/@mui/x-charts/hooks/useReducedMotion.js"],"sourcesContent":["'use client';\n\nimport { useIsomorphicLayoutEffect, Globals } from '@react-spring/web';\nconst handleMediaChange = e => {\n  Globals.assign({\n    // Modification such the react-spring implementation such that this hook can remove animation but never activate animation.\n    skipAnimation: e.matches || undefined\n  });\n};\n\n/**\n * Returns `boolean` or `null`, used to automatically\n * set skipAnimations to the value of the user's\n * `prefers-reduced-motion` query.\n *\n * The return value, post-effect, is the value of their preferred setting\n */\nexport const useReducedMotion = () => {\n  // Taken from: https://github.com/pmndrs/react-spring/blob/fd65b605b85c3a24143c4ce9dd322fdfca9c66be/packages/shared/src/hooks/useReducedMotion.ts\n\n  useIsomorphicLayoutEffect(() => {\n    // Skip animation test/jsdom\n    const shouldSkipAnimation = !window?.matchMedia;\n    if (shouldSkipAnimation) {\n      handleMediaChange({\n        matches: true\n      });\n      return undefined;\n    }\n    const mql = window.matchMedia('(prefers-reduced-motion)');\n    handleMediaChange(mql);\n\n    // MatchMedia is not fully supported in all environments, so we need to check if it exists before calling addEventListener\n    mql.addEventListener?.('change', handleMediaChange);\n    return () => {\n      mql.removeEventListener?.('change', handleMediaChange);\n    };\n  }, []);\n};"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,yBAAyB,EAAEC,OAAO,QAAQ,mBAAmB;AACtE,MAAMC,iBAAiB,GAAGC,CAAC,IAAI;EAC7BF,OAAO,CAACG,MAAM,CAAC;IACb;IACAC,aAAa,EAAEF,CAAC,CAACG,OAAO,IAAIC;EAC9B,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC;;EAEAR,yBAAyB,CAAC,MAAM;IAC9B;IACA,MAAMS,mBAAmB,GAAG,CAACC,MAAM,EAAEC,UAAU;IAC/C,IAAIF,mBAAmB,EAAE;MACvBP,iBAAiB,CAAC;QAChBI,OAAO,EAAE;MACX,CAAC,CAAC;MACF,OAAOC,SAAS;IAClB;IACA,MAAMK,GAAG,GAAGF,MAAM,CAACC,UAAU,CAAC,0BAA0B,CAAC;IACzDT,iBAAiB,CAACU,GAAG,CAAC;;IAEtB;IACAA,GAAG,CAACC,gBAAgB,GAAG,QAAQ,EAAEX,iBAAiB,CAAC;IACnD,OAAO,MAAM;MACXU,GAAG,CAACE,mBAAmB,GAAG,QAAQ,EAAEZ,iBAAiB,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}